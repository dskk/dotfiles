[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("python3")'
on_event = 'InsertEnter'
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#enable_ignore_case = 1
    call deoplete#custom#option('smart_case', v:true)
    call deoplete#custom#var('omni', 'input_patterns', {
    \ 'tex': g:vimtex#re#deoplete
    \})

    " <TAB>: completion.
    imap <silent><expr> <TAB> pumvisible() ? "\<C-n>" : <SID>check_back_space() ? "\<TAB>" : deoplete#mappings#manual_complete()
    function! s:check_back_space() abort
        let col = col('.') - 1
        return !col || getline('.')[col - 1]  =~ '\s'
    endfunction

    " <S-TAB>: completion back.
    inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
depends = ['vimproc.vim', 'shabadou.vim']
on_ft = ['python']
hook_source = '''
    " Running vimproc
    " Showing success is buffer and error is quickfix
    let g:quickrun_config = {
        \ '_' : {
            \ 'runner' : 'vimproc',
            \ 'runner/vimproc/updatetime' : 40,
            \ 'outputter' : 'error',
            \ 'outputter/error/success' : 'buffer',
            \ 'outputter/error/error'   : 'quickfix',
            \ 'outputter/buffer/split' : ':botright 8sp',
            \ 'hook/inu/enable' : 1,
            \ 'hook/inu/wait' : 20,
        \ }
    \}

    " Close quickfix is [q]
    au FileType qf nnoremap <silent><buffer>q :quit<CR>

    " Keymap
    let g:quickrun_no_default_key_mappings = 1
    " Running with close quickfix and save file
    nnoremap <Leader>r :cclose<CR>:write<CR>:QuickRun -mode n<CR>
    xnoremap <Leader>r :<C-U>cclose<CR>:write<CR>gv:QuickRun -mode v<CR>

    " Stop quickrun is [C-c]
    nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"
'''

[[plugins]]
repo = 'neomake/neomake'
on_ft = ['python']
hook_source = '''
    "autocmd! BufEnter,BufWritePost * Neomake
    "let g:neomake_python_enabled_makers = ['python', 'flake8']
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
depends = ['deoplete.nvim']
on_ft = ['python']

[[plugins]]
repo = 'lervag/vimtex'
on_ft=['tex']
hook_source='''
  let g:vimtex_compiler_latexmk = {
    \ 'executable' : 'latexmk',
    \ 'options' : [
    \   '-lualatex',
    \   '-file-line-error',
    \   '-synctex=1',
    \   '-interaction=nonstopmode'
    \ ],
    \}
'''    
